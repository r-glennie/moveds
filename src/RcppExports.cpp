// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// GetObserverPosition
arma::vec GetObserverPosition(const double time, const arma::vec strip_size, const double buffer, const arma::vec delta, const int transect_type, const double observer_speed);
RcppExport SEXP _moveds_GetObserverPosition(SEXP timeSEXP, SEXP strip_sizeSEXP, SEXP bufferSEXP, SEXP deltaSEXP, SEXP transect_typeSEXP, SEXP observer_speedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type strip_size(strip_sizeSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const int >::type transect_type(transect_typeSEXP);
    Rcpp::traits::input_parameter< const double >::type observer_speed(observer_speedSEXP);
    rcpp_result_gen = Rcpp::wrap(GetObserverPosition(time, strip_size, buffer, delta, transect_type, observer_speed));
    return rcpp_result_gen;
END_RCPP
}
// CalcTrm
arma::sp_mat CalcTrm(const arma::vec num_cells, const double sd, const double dx);
RcppExport SEXP _moveds_CalcTrm(SEXP num_cellsSEXP, SEXP sdSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< const double >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcTrm(num_cells, sd, dx));
    return rcpp_result_gen;
END_RCPP
}
// Diffuse
arma::rowvec Diffuse(const arma::sp_mat a, const arma::rowvec v, const double t, const arma::vec num_cells, const int& krylov_dim, const double& tol);
RcppExport SEXP _moveds_Diffuse(SEXP aSEXP, SEXP vSEXP, SEXP tSEXP, SEXP num_cellsSEXP, SEXP krylov_dimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type v(vSEXP);
    Rcpp::traits::input_parameter< const double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const int& >::type krylov_dim(krylov_dimSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(Diffuse(a, v, t, num_cells, krylov_dim, tol));
    return rcpp_result_gen;
END_RCPP
}
// CalcInitialDistribution
arma::rowvec CalcInitialDistribution(const arma::vec num_cells, const arma::vec delta, const arma::vec region_size);
RcppExport SEXP _moveds_CalcInitialDistribution(SEXP num_cellsSEXP, SEXP deltaSEXP, SEXP region_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type region_size(region_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcInitialDistribution(num_cells, delta, region_size));
    return rcpp_result_gen;
END_RCPP
}
// Working2Natural
arma::vec Working2Natural(arma::vec working_parameter, int hzfn);
RcppExport SEXP _moveds_Working2Natural(SEXP working_parameterSEXP, SEXP hzfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type working_parameter(working_parameterSEXP);
    Rcpp::traits::input_parameter< int >::type hzfn(hzfnSEXP);
    rcpp_result_gen = Rcpp::wrap(Working2Natural(working_parameter, hzfn));
    return rcpp_result_gen;
END_RCPP
}
// Natural2Working
arma::vec Natural2Working(arma::vec parameter, int hzfn);
RcppExport SEXP _moveds_Natural2Working(SEXP parameterSEXP, SEXP hzfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parameter(parameterSEXP);
    Rcpp::traits::input_parameter< int >::type hzfn(hzfnSEXP);
    rcpp_result_gen = Rcpp::wrap(Natural2Working(parameter, hzfn));
    return rcpp_result_gen;
END_RCPP
}
// CalcHazard
double CalcHazard(const double x, const double y, const double dt, const double observer_speed, const arma::vec parameter, const int type, const int hzfn);
RcppExport SEXP _moveds_CalcHazard(SEXP xSEXP, SEXP ySEXP, SEXP dtSEXP, SEXP observer_speedSEXP, SEXP parameterSEXP, SEXP typeSEXP, SEXP hzfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const double >::type observer_speed(observer_speedSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type parameter(parameterSEXP);
    Rcpp::traits::input_parameter< const int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcHazard(x, y, dt, observer_speed, parameter, type, hzfn));
    return rcpp_result_gen;
END_RCPP
}
// CalcSurvivalPr
arma::rowvec CalcSurvivalPr(const int t, const arma::vec parameter, const arma::vec num_cells, const arma::vec delta, const arma::vec strip_size, const double buffer, const double observer_speed, const int type, const int hzfn, const int nint);
RcppExport SEXP _moveds_CalcSurvivalPr(SEXP tSEXP, SEXP parameterSEXP, SEXP num_cellsSEXP, SEXP deltaSEXP, SEXP strip_sizeSEXP, SEXP bufferSEXP, SEXP observer_speedSEXP, SEXP typeSEXP, SEXP hzfnSEXP, SEXP nintSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type parameter(parameterSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type strip_size(strip_sizeSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const double >::type observer_speed(observer_speedSEXP);
    Rcpp::traits::input_parameter< const int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    Rcpp::traits::input_parameter< const int >::type nint(nintSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcSurvivalPr(t, parameter, num_cells, delta, strip_size, buffer, observer_speed, type, hzfn, nint));
    return rcpp_result_gen;
END_RCPP
}
// Detect
arma::rowvec Detect(const int t, const arma::rowvec pr, const arma::vec parameter, const arma::vec num_cells, const arma::vec delta, const arma::vec strip_size, const double buffer, const double observer_speed, const int type, const int hzfn);
RcppExport SEXP _moveds_Detect(SEXP tSEXP, SEXP prSEXP, SEXP parameterSEXP, SEXP num_cellsSEXP, SEXP deltaSEXP, SEXP strip_sizeSEXP, SEXP bufferSEXP, SEXP observer_speedSEXP, SEXP typeSEXP, SEXP hzfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type pr(prSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type parameter(parameterSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type strip_size(strip_sizeSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const double >::type observer_speed(observer_speedSEXP);
    Rcpp::traits::input_parameter< const int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    rcpp_result_gen = Rcpp::wrap(Detect(t, pr, parameter, num_cells, delta, strip_size, buffer, observer_speed, type, hzfn));
    return rcpp_result_gen;
END_RCPP
}
// CalcHazardDetected
double CalcHazardDetected(const arma::mat data, double dt, arma::mat transdat, arma::vec parameter, double observer_speed, int type, const int hzfn);
RcppExport SEXP _moveds_CalcHazardDetected(SEXP dataSEXP, SEXP dtSEXP, SEXP transdatSEXP, SEXP parameterSEXP, SEXP observer_speedSEXP, SEXP typeSEXP, SEXP hzfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type transdat(transdatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type parameter(parameterSEXP);
    Rcpp::traits::input_parameter< double >::type observer_speed(observer_speedSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcHazardDetected(data, dt, transdat, parameter, observer_speed, type, hzfn));
    return rcpp_result_gen;
END_RCPP
}
// CalcMovementLogLikelihood
double CalcMovementLogLikelihood(const double sd, const Rcpp::List data);
RcppExport SEXP _moveds_CalcMovementLogLikelihood(SEXP sdSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcMovementLogLikelihood(sd, data));
    return rcpp_result_gen;
END_RCPP
}
// InTransect
arma::rowvec InTransect(const arma::vec num_cells, const arma::vec strip_size, const double dx, const double w, const double ymax, const double buffer, const int type);
RcppExport SEXP _moveds_InTransect(SEXP num_cellsSEXP, SEXP strip_sizeSEXP, SEXP dxSEXP, SEXP wSEXP, SEXP ymaxSEXP, SEXP bufferSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type strip_size(strip_sizeSEXP);
    Rcpp::traits::input_parameter< const double >::type dx(dxSEXP);
    Rcpp::traits::input_parameter< const double >::type w(wSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const int >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(InTransect(num_cells, strip_size, dx, w, ymax, buffer, type));
    return rcpp_result_gen;
END_RCPP
}
// NegativeLogLikelihood
double NegativeLogLikelihood(const arma::vec working_parameter, const arma::vec start, const arma::mat data, const arma::mat transdat, const arma::vec auxiliary_data, const arma::vec delta, const arma::vec num_cells, const int T, const double ymax, const double buffer, const Rcpp::List movement_data, const double fixed_sd, const int hzfn, const int move_method, const bool print, const double con);
RcppExport SEXP _moveds_NegativeLogLikelihood(SEXP working_parameterSEXP, SEXP startSEXP, SEXP dataSEXP, SEXP transdatSEXP, SEXP auxiliary_dataSEXP, SEXP deltaSEXP, SEXP num_cellsSEXP, SEXP TSEXP, SEXP ymaxSEXP, SEXP bufferSEXP, SEXP movement_dataSEXP, SEXP fixed_sdSEXP, SEXP hzfnSEXP, SEXP move_methodSEXP, SEXP printSEXP, SEXP conSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type working_parameter(working_parameterSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type start(startSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type transdat(transdatSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type auxiliary_data(auxiliary_dataSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const int >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type movement_data(movement_dataSEXP);
    Rcpp::traits::input_parameter< const double >::type fixed_sd(fixed_sdSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    Rcpp::traits::input_parameter< const int >::type move_method(move_methodSEXP);
    Rcpp::traits::input_parameter< const bool >::type print(printSEXP);
    Rcpp::traits::input_parameter< const double >::type con(conSEXP);
    rcpp_result_gen = Rcpp::wrap(NegativeLogLikelihood(working_parameter, start, data, transdat, auxiliary_data, delta, num_cells, T, ymax, buffer, movement_data, fixed_sd, hzfn, move_method, print, con));
    return rcpp_result_gen;
END_RCPP
}
// GetPenc
double GetPenc(const arma::vec working_parameter, const arma::mat transdat, const arma::vec auxiliary_data, const arma::vec delta, const arma::vec num_cells, const int T, const double ymax, const double buffer, const double fixed_sd, const int hzfn, int move_method);
RcppExport SEXP _moveds_GetPenc(SEXP working_parameterSEXP, SEXP transdatSEXP, SEXP auxiliary_dataSEXP, SEXP deltaSEXP, SEXP num_cellsSEXP, SEXP TSEXP, SEXP ymaxSEXP, SEXP bufferSEXP, SEXP fixed_sdSEXP, SEXP hzfnSEXP, SEXP move_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type working_parameter(working_parameterSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type transdat(transdatSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type auxiliary_data(auxiliary_dataSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const int >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const double >::type fixed_sd(fixed_sdSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    Rcpp::traits::input_parameter< int >::type move_method(move_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPenc(working_parameter, transdat, auxiliary_data, delta, num_cells, T, ymax, buffer, fixed_sd, hzfn, move_method));
    return rcpp_result_gen;
END_RCPP
}
// GetHist
arma::mat GetHist(const arma::vec working_parameter, const arma::vec range, const arma::mat transdat, const arma::vec auxiliary_data, const arma::vec delta, const arma::vec num_cells, const int T, const double ymax, const double buffer, const double fixed_sd, const int hzfn, int move_method);
RcppExport SEXP _moveds_GetHist(SEXP working_parameterSEXP, SEXP rangeSEXP, SEXP transdatSEXP, SEXP auxiliary_dataSEXP, SEXP deltaSEXP, SEXP num_cellsSEXP, SEXP TSEXP, SEXP ymaxSEXP, SEXP bufferSEXP, SEXP fixed_sdSEXP, SEXP hzfnSEXP, SEXP move_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type working_parameter(working_parameterSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type range(rangeSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type transdat(transdatSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type auxiliary_data(auxiliary_dataSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type num_cells(num_cellsSEXP);
    Rcpp::traits::input_parameter< const int >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< const double >::type buffer(bufferSEXP);
    Rcpp::traits::input_parameter< const double >::type fixed_sd(fixed_sdSEXP);
    Rcpp::traits::input_parameter< const int >::type hzfn(hzfnSEXP);
    Rcpp::traits::input_parameter< int >::type move_method(move_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(GetHist(working_parameter, range, transdat, auxiliary_data, delta, num_cells, T, ymax, buffer, fixed_sd, hzfn, move_method));
    return rcpp_result_gen;
END_RCPP
}
// SimulateDsData
int SimulateDsData(arma::vec true_parameter, int N, arma::vec auxiliary_info, double dt, int move);
RcppExport SEXP _moveds_SimulateDsData(SEXP true_parameterSEXP, SEXP NSEXP, SEXP auxiliary_infoSEXP, SEXP dtSEXP, SEXP moveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type true_parameter(true_parameterSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type auxiliary_info(auxiliary_infoSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< int >::type move(moveSEXP);
    rcpp_result_gen = Rcpp::wrap(SimulateDsData(true_parameter, N, auxiliary_info, dt, move));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_moveds_GetObserverPosition", (DL_FUNC) &_moveds_GetObserverPosition, 6},
    {"_moveds_CalcTrm", (DL_FUNC) &_moveds_CalcTrm, 3},
    {"_moveds_Diffuse", (DL_FUNC) &_moveds_Diffuse, 6},
    {"_moveds_CalcInitialDistribution", (DL_FUNC) &_moveds_CalcInitialDistribution, 3},
    {"_moveds_Working2Natural", (DL_FUNC) &_moveds_Working2Natural, 2},
    {"_moveds_Natural2Working", (DL_FUNC) &_moveds_Natural2Working, 2},
    {"_moveds_CalcHazard", (DL_FUNC) &_moveds_CalcHazard, 7},
    {"_moveds_CalcSurvivalPr", (DL_FUNC) &_moveds_CalcSurvivalPr, 10},
    {"_moveds_Detect", (DL_FUNC) &_moveds_Detect, 10},
    {"_moveds_CalcHazardDetected", (DL_FUNC) &_moveds_CalcHazardDetected, 7},
    {"_moveds_CalcMovementLogLikelihood", (DL_FUNC) &_moveds_CalcMovementLogLikelihood, 2},
    {"_moveds_InTransect", (DL_FUNC) &_moveds_InTransect, 7},
    {"_moveds_NegativeLogLikelihood", (DL_FUNC) &_moveds_NegativeLogLikelihood, 16},
    {"_moveds_GetPenc", (DL_FUNC) &_moveds_GetPenc, 11},
    {"_moveds_GetHist", (DL_FUNC) &_moveds_GetHist, 12},
    {"_moveds_SimulateDsData", (DL_FUNC) &_moveds_SimulateDsData, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_moveds(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
